# code: language=ansible
---
- name: Make backup of KeyStore
  ansible.builtin.copy:
    src: "{{ keystore }}"
    dest: "{{ keystore }}.{{ ansible_date_time.epoch }}.bak"
    mode: u=rw
    remote_src: true

- name: Create temporary P12 file
  ansible.builtin.tempfile:
    state: file
    suffix: .p12temp
  register: p12_temp

- name: Generate PKCS12 CSR
  ansible.builtin.command: |
    openssl pkcs12 -export
    -in {{ crt_full_path }}
    -inkey {{ key_full_path }}
    -CAfile {{ intermediate_full_path }}
    -out {{ p12_temp.path }} -passout pass:{{ keystore_password }}
    -caname root -name {{ unifi_alias }}
  changed_when: true

- name: Stop service
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: stopped

- name: Delete the previous certificate data from keystore to avoid "already exists" message
  ansible.builtin.command: |
    keytool -delete
    -alias {{ unifi_alias }}
    -keystore {{ keystore }}
    -deststorepass {{ keystore_password }}
  changed_when: true

- name: Import the temp PKCS12 file into the UniFi keystore
  ansible.builtin.command: |
    keytool -importkeystore
    -srckeystore {{ p12_temp.path }} -srcstoretype PKCS12
    -srcstorepass {{ keystore_password }}
    -destkeystore {{ keystore }}
    -deststorepass {{ keystore_password }}
    -destkeypass {{ keystore_password }}
    -alias {{ unifi_alias }} -trustcacerts
  changed_when: true

- name: Import the certificate authority data into the UniFi keystore
  ansible.builtin.command: |
    java -jar {{ java_dir }}/lib/ace.jar
    import_cert {{ crt_full_path }} {{ intermediate_full_path }}
  when: service_name == "unifi"
  changed_when: true

- name: Restart service
  ansible.builtin.service:
    name: "{{ service_name }}"
    state: restarted
